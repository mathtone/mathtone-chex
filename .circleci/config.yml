version: 2.1
commands:
  swapref:
    parameters:
      proj:
        type:
          string
      ref:
        type:
          string
      pkg:
        type:
          string
      version:
        type:
          string
    steps:
      - run: dotnet remove << parameters.proj >> reference << parameters.ref >>
      - run: dotnet add << parameters.proj >> package << parameters.pkg >> -v << parameters.version >> --source ~/project/packages
  pack:
    parameters:
      project:
        type:
          string
      suffix:
        type:
          string
      version:
        type:
          string
    steps:
      
      - run:
          name: Build and Pack << parameters.project >>
          command: |
            dotnet build << parameters.project >> --configuration Release /p:VersionPrefix=<< parameters.version >>
            dotnet pack << parameters.project >> --configuration Release --no-build --output packages --version-suffix << parameters.suffix >> 
  
jobs:
  prep-alpha:
    docker:
      - image: mcr.microsoft.com/dotnet/sdk:6.0
    steps:
      - checkout
      - run: echo << pipeline.git.tag >>
      - run:
          name: Add local package store
          command: |
            mkdir packages
            dotnet nuget add source ~/project/packages --name Local
      - run: dotnet nuget list source
      - run: dotnet restore src/chex.sln
      - pack:
          project: src/Chex/Chex.csproj
          suffix: alpha
          version: 0.0.0
      - swapref:
          proj: src/Chex.Testing/Chex.Testing.csproj
          ref: ../Chex/Chex.csproj
          pkg: Chex
          version: 0.0.0-alpha
      - pack:
          project: src/Chex.Testing/Chex.Testing.csproj
          suffix: alpha
          version: 0.0.0
      - swapref:
          proj: src/Chex.Testing.Xunit/Chex.Testing.Xunit.csproj
          ref: ../Chex.Testing/Chex.Testing.csproj
          pkg: Chex.Testing
          version: 0.0.0-alpha
      - pack:
          project: src/Chex.Testing.Xunit/Chex.Testing.Xunit.csproj
          suffix: alpha
          version: 0.0.0
      
      - swapref:
          proj: src/Chex.Testing.Xunit.Tests/Chex.Testing.Xunit.Tests.csproj
          ref: ../Chex.Testing.Xunit/Chex.Testing.Xunit.csproj
          pkg: Chex.Testing.Xunit
          version: 0.0.0-alpha
      - run: dotnet build src/Chex.Testing.Xunit.Tests/Chex.Testing.Xunit.Tests.csproj
      - persist_to_workspace:
          root: .
          paths:
            - .
  prep-release:
    docker:
      - image: mcr.microsoft.com/dotnet/sdk:6.0
    steps:
      - checkout
      - run: echo << pipeline.git.tag >>
  run-alpha-unit-tests:
    docker:
      - image: mcr.microsoft.com/dotnet/sdk:6.0
    steps:
      - attach_workspace:
          at: .
      - run: dotnet nuget add source ~/project/packages --name Local
      # - run: dotnet restore src/chex.sln
      # - run: dotnet build src/chex.sln --configuration Release
      - run: dotnet test src/chex.sln

  run-release-unit-tests:
    docker:
      - image: mcr.microsoft.com/dotnet/sdk:6.0
    steps:
      - attach_workspace:
          at: .
      - run: dotnet nuget add source ~/project/packages --name Local
      # - run: dotnet restore src/chex.sln
      # - run: dotnet build src/chex.sln --configuration Release
      - run: dotnet test src/chex.sln
  
  publish-alphas-artifactory:
    docker:
      - image: mcr.microsoft.com/dotnet/sdk:6.0
    steps:
      - attach_workspace:
          at: .
      - run:
          name: "Add Artifactory"
          command: dotnet nuget add source https://mathtone.jfrog.io/artifactory/api/nuget/v3/mathtone-dev --name Mathtone-Dev --username ${ARTIFACTORY_USER} --password ${ARTIFACTORY_PWD} --store-password-in-clear-text
      - run: dotnet nuget push packages/*.nupkg --source Mathtone-Dev
workflows:
  build:
    jobs:
      - prep-alpha:
          context: MATHTONE_DEV
          filters: #&filters-release # this yaml anchor sets filter configs to "filters-release"
            branches:
              only:
                - /prerelease\/.*/
      - run-alpha-unit-tests:
          requires:
            - prep-alpha
      - publish-alphas-artifactory:
          context: MATHTONE_DEV
          filters: #&filters-release # this yaml anchor sets filter configs to "filters-release"
            branches:
              only:
                - /prerelease\/.*/
          requires:
            - run-alpha-unit-tests
      - prep-release:
          context: MATHTONE_DEV
          filters: #&filters-release # this yaml anchor sets filter configs to "filters-release"
            branches:
              only:
                - main
      - run-release-unit-tests:
          requires:
            - prep-release
        
      #- run-unit-tests:
      #    requires:
      #      - prep-workspace
      #- publish-alphas-artifactory:
      #    context: MATHTONE_DEV
      #    requires:
      #      - run-unit-tests
